name: CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build-and-push:
    runs-on: ubuntu-22.04
    environment: production
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Setup Node, pnpm, turbo cache, and dependencies
        uses: ./.github/actions/setup-node-pnpm

      - name: Write backend .env.production
        run: echo "${{ secrets.BACKEND_ENV }}" > ./apps/backend/.env.production

      - name: Write frontend .env.production
        run: echo "${{ secrets.FRONTEND_ENV }}" > ./apps/frontend/.env.production

      - name: Write database .env.production
        run: echo "${{ secrets.DATABASE_ENV }}" > ./apps/database/.env.production

      - name: Build pnpm
        run: pnpm build

      - name: Build and push backend image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./apps/backend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cirrodrive:backend

      - name: Build and push frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./apps/frontend/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/cirrodrive:frontend

  deploy:
    runs-on: ubuntu-22.04
    needs: build-and-push
    steps:
      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/${{ secrets.SERVER_USER }}/cirrodrive-ci
            git pull origin main
            pnpm install
            pnpm db:push
            pnpm db:seed
            pnpm docker:down
            pnpm docker:up
