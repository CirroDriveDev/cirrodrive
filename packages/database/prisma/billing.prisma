// enums
enum SubscriptionStatus {
  TRIAL
  ACTIVE
  CANCELED
  EXPIRED
  UNPAID
}

enum PaymentStatus {
  READY
  IN_PROGRESS
  DONE
  CANCELED
  FAILED
}

enum Interval {
  MONTHLY
  YEARLY
}

// 요금제
model Plan {
  // 도메인 데이터
  id            String         @id @default(cuid())
  name          String         @unique
  description   String?
  price         Int // in KRW
  interval      Interval
  storageLimit  Int // in Byte
  trialDays     Int            @default(0)
  isDefault     Boolean        @default(false)
  // 메타데이터
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt()
  // 관계
  subscriptions Subscription[]
  users         User[]         @relation("CurrentPlan")
}

// 구독 정보
model Subscription {
  id     String @id @default(cuid())
  userId String @unique
  planId String

  status             SubscriptionStatus
  startedAt          DateTime
  expiresAt          DateTime
  nextBillingAt      DateTime
  canceledAt         DateTime? // optional
  cancellationReason String?
  trialEndsAt        DateTime?

  user     User      @relation(fields: [userId], references: [id])
  plan     Plan      @relation(fields: [planId], references: [id])
  payments Payment[]
}

enum BillingMethod {
  CARD // 카드 결제
}

enum CardType {
  CREDIT // 신용카드
  DEBIT // 체크카드
  GIFT // 기프트카드
}

// 카드 소유자 유형
enum CardOwnerType {
  PERSONAL // 개인
  CORPORATE // 법인
}

// 구독 결제 정보
model Billing {
  id               String        @id @default(cuid())
  userId           String
  // 도메인 데이터
  mId              String
  customerKey      String
  authenticatedAt  DateTime
  method           BillingMethod
  billingKey       String        @unique
  // 카드 정보
  cardIssuerCode   String
  cardAcquirerCode String
  cardNumber       String
  cardType         CardType
  cardOwnerType    CardOwnerType
  cardCompany      String
  // 내부 데이터
  priority         Int
  // 메타데이터
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt()
  // 관계
  user             User          @relation(fields: [userId], references: [id])
}

// 결제 내역
model Payment {
  id             String @id @default(cuid())
  subscriptionId String
  userId         String

  amount     Int
  currency   String        @default("KRW")
  paymentKey String        @unique
  orderId    String
  status     PaymentStatus
  approvedAt DateTime?
  receiptUrl String?

  // 아래 필드 추가 또는 유지
  canceledAt   DateTime? // 전체 취소 일시
  cancelReason String? // 전체 취소 사유

  createdAt DateTime @default(now())

  user         User         @relation(fields: [userId], references: [id])
  subscription Subscription @relation(fields: [subscriptionId], references: [id])
}

model UsageRecord {
  id          String   @id @default(cuid())
  userId      String
  usedStorage Int // MB
  usedTraffic Int // MB
  recordedAt  DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}
