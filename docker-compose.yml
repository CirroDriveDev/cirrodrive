name: cirrodrive
services:
  frontend:
    image: zetabs/cirrodrive:frontend
    build:
      context: .
      dockerfile: apps/frontend/Dockerfile
    container_name: cirrodrive-frontend
    restart: always
    environment:
      - TZ=Asia/Seoul
      - FRONTEND_PORT=${APP_FRONTEND_PORT}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_FRONTEND_PORT}"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"

  backend:
    image: zetabs/cirrodrive:backend
    build:
      context: .
      dockerfile: apps/backend/Dockerfile
    container_name: cirrodrive-backend
    restart: always
    environment:
      - NODE_ENV=production
      - MODE=production
      - APP_PUBLIC_HOST=${APP_PUBLIC_HOST}
      - APP_BACKEND_PORT=${APP_BACKEND_PORT}
      - APP_FRONTEND_PORT=${APP_FRONTEND_PORT}
      - AUTH_JWT_SECRET=${AUTH_JWT_SECRET}
      - AUTH_DEFAULT_ADMIN_USERNAME=${AUTH_DEFAULT_ADMIN_USERNAME}
      - AUTH_DEFAULT_ADMIN_PASSWORD=${AUTH_DEFAULT_ADMIN_PASSWORD}
      - AWS_REGION=${AWS_REGION}
      - AWS_SES_SOURCE_EMAIL=${AWS_SES_SOURCE_EMAIL}
      - AWS_S3_BUCKET=${AWS_S3_BUCKET}
      - AWS_CLOUDFRONT_DOMAIN=${AWS_CLOUDFRONT_DOMAIN}
      - AWS_CLOUDFRONT_KEY_PAIR_ID=${AWS_CLOUDFRONT_KEY_PAIR_ID}
      - AWS_CLOUDFRONT_PRIVATE_KEY=${AWS_CLOUDFRONT_PRIVATE_KEY}
      - AWS_CLOUDFRONT_EXPIRES_IN_SECONDS=${AWS_CLOUDFRONT_EXPIRES_IN_SECONDS}
      - PAYMENT_TOSS_SECRET_KEY=${PAYMENT_TOSS_SECRET_KEY}
      - DATABASE_URL=${DATABASE_URL}
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${APP_BACKEND_PORT}/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"

  reverse-proxy:
    build:
      context: ./apps/reverse-proxy
      dockerfile: Dockerfile
    image: zetabs/cirrodrive:reverse-proxy
    container_name: cirrodrive-reverse-proxy
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN=${APP_PUBLIC_HOST}
      - FRONTEND_PORT=${APP_FRONTEND_PORT}
      - BACKEND_PORT=${APP_BACKEND_PORT}
    volumes:
      - ./apps/reverse-proxy/certbot/conf:/etc/letsencrypt
      - ./apps/reverse-proxy/certbot/www:/var/www/certbot
    depends_on:
      frontend:
        condition: service_healthy
      backend:
        condition: service_healthy
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    networks:
      - default

  certbot:
    image: certbot/certbot
    container_name: cirrodrive-certbot
    volumes:
      - ./apps/reverse-proxy/certbot/conf:/etc/letsencrypt
      - ./apps/reverse-proxy/certbot/www:/var/www/certbot
    # SSL 인증서 발급/갱신 시에만 사용하는 서비스
    profiles:
      - ssl
    networks:
      - default
