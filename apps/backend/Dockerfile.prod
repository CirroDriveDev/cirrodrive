# 기본 이미지 설정
FROM node:20.16 AS base
# 환경 변수 설정
ENV TURBO_TELEMETRY_DISABLED=1
# pnpm 설정
ENV PNPM_HOME="/pnpm"
ENV PATH="$PNPM_HOME:$PATH"
RUN corepack enable
# turborepo 설치
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install -g turbo
# 작업 디렉터리 설정
WORKDIR /cirrodrive

# 모노레포 정리
FROM base AS prune
# 모노레포 복사
COPY . .
# 불필요한 파일 정리
RUN pnpx turbo prune @cirrodrive/backend --docker
# 결과 압축
RUN tar -czf json.tar.gz -C ./out/json . && \
  tar -czf full.tar.gz -C ./out/full .

# 의존성 설치
FROM base AS deps
# 의존성 파일 복사
COPY --from=prune /cirrodrive/json.tar.gz .
RUN tar -xzf json.tar.gz -C . && rm json.tar.gz
# 의존성 설치
RUN --mount=type=cache,id=pnpm,target=/pnpm/store pnpm install --frozen-lockfile

# 빌드
FROM deps AS build
# 환경 변수 설정
ENV VITE_PORT=8000
ENV DATABASE_URL=mysql://builduser:buildpassword@localhost:3306/builddatabase
ENV MARIADB_ROOT_PASSWORD=root
ENV MARIADB_USER=builduser
ENV MARIADB_PASSWORD=buildpassword
ENV MARIADB_DATABASE=builddatabase
# MariaDB 11.4.3 설치
RUN apt update && apt -y upgrade && \
  curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s -- --mariadb-server-version=11.4.3 && \
  apt update && \
  apt -y install mariadb-server mariadb-client
# MariaDB 초기화 및 백그라운드 실행
RUN mariadbd-safe & \
  until mariadb-admin ping --silent; do \
  echo 'Waiting for MariaDB to be ready...'; \
  sleep 1; \
  done && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${MARIADB_DATABASE};" && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "CREATE USER IF NOT EXISTS '${MARIADB_USER}'@'%' IDENTIFIED BY '${MARIADB_PASSWORD}';" && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "GRANT ALL PRIVILEGES ON *.* TO '${MARIADB_USER}'@'%';" && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "FLUSH PRIVILEGES;"
# 전체 파일 복사
COPY --from=prune /cirrodrive/full.tar.gz .
RUN tar -xzf full.tar.gz -C . && rm full.tar.gz
# prisma 클라이언트 및 마이그레이션 생성
RUN mariadbd-safe & \
  until mariadb-admin ping --silent; do \
  echo 'Waiting for MariaDB to be ready...'; \
  sleep 1; \
  done && \
  pnpm -F @cirrodrive/backend run prisma:generate && \
  pnpm -F @cirrodrive/backend run prisma:migrate:dev
# 프로젝트 빌드
RUN pnpm -F @cirrodrive/backend run build

# 실행 이미지 설정
FROM base AS runner
# build에서 node_modules과 prisma client 복사
COPY --from=build /cirrodrive/node_modules /cirrodrive/node_modules
# build에서 빌드된 서버와 prisma 디렉토리 복사
COPY --from=build /cirrodrive/apps/backend/prisma /cirrodrive/apps/backend/prisma
COPY --from=build /cirrodrive/apps/backend/dist /cirrodrive/apps/backend/dist
# 8000 포트 노출
EXPOSE 8000
# 실행 명령어
ENTRYPOINT [ "pnpm", "-F", "@cirrodrive/backend", "run", "start" ]