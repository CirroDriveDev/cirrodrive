# 1단계: Turborepo로 모노레포를 정리하는 단계
FROM node:20-alpine AS pruner

# 환경 변수 설정
ENV TURBO_TELEMETRY_DISABLED=1

# 작업 디렉터리 설정
WORKDIR /cirrodrive

# turborepo 설치
RUN npm install turbo

# 모노레포를 컨테이너로 복사
COPY . .

# Turbo prune을 사용해 불필요한 파일을 정리
RUN npx turbo prune backend --docker

# 결과를 압축
RUN tar -czf json.tar.gz -C ./out/json . && \
  tar -czf full.tar.gz -C ./out/full .

# 2단계: 의존성 설치 단계
FROM node:20 AS dependency

# 작업 디렉터리 설정
WORKDIR /cirrodrive

# pruner에서 압축 파일을 통해 의존성 파일 복사
COPY --from=pruner /cirrodrive/json.tar.gz .
RUN tar -xzf json.tar.gz -C . && rm json.tar.gz

# 의존성 설치
RUN npm ci

# 작업 디렉터리 설정
WORKDIR /

# 3단계: 빌드 단계
FROM dependency AS builder

# 환경 변수 설정
ENV VITE_PORT=8000
ENV DATABASE_URL=mysql://builduser:buildpassword@localhost:3306/builddatabase
ENV MARIADB_ROOT_PASSWORD=root
ENV MARIADB_USER=builduser
ENV MARIADB_PASSWORD=buildpassword
ENV MARIADB_DATABASE=builddatabase

# MariaDB 11.4.3 설치
RUN apt update && apt -y upgrade && \
  curl -LsS https://downloads.mariadb.com/MariaDB/mariadb_repo_setup | bash -s -- --mariadb-server-version=11.4.3 && \
  apt update && \
  apt -y install mariadb-server mariadb-client

# MariaDB 초기화 및 백그라운드 실행
RUN mariadbd-safe & \
  until mariadb-admin ping --silent; do \
  echo 'Waiting for MariaDB to be ready...'; \
  sleep 1; \
  done && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "CREATE DATABASE IF NOT EXISTS ${MARIADB_DATABASE};" && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "CREATE USER IF NOT EXISTS '${MARIADB_USER}'@'%' IDENTIFIED BY '${MARIADB_PASSWORD}';" && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "GRANT ALL PRIVILEGES ON *.* TO '${MARIADB_USER}'@'%';" && \
  mariadb -u root -p${MARIADB_ROOT_PASSWORD} -e "FLUSH PRIVILEGES;"

# 작업 디렉터리 설정
WORKDIR /cirrodrive

# pruner에서 압축 파일을 통해 전체 파일 복사
COPY --from=pruner /cirrodrive/full.tar.gz .
RUN tar -xzf full.tar.gz -C . && rm full.tar.gz

# 작업 디렉터리 설정
WORKDIR /cirrodrive/apps/backend

# prisma 클라이언트 및 마이그레이션 생성
RUN mariadbd-safe & \
  until mariadb-admin ping --silent; do \
  echo 'Waiting for MariaDB to be ready...'; \
  sleep 1; \
  done && \
  npm run prisma:generate && \
  npm run prisma:migrate:dev

# 프로젝트 빌드
RUN npm run build

# 4단계: 실행 단계
FROM dependency AS runner

# 작업 디렉터리 설정
WORKDIR /cirrodrive

# builder에서 prisma client 복사
COPY --from=builder /cirrodrive/node_modules/.prisma node_modules/.prisma

# 작업 디렉터리 설정
WORKDIR /cirrodrive/apps/backend

# builder에서 빌드된 서버와 prisma 디렉토리를 복사
COPY --from=builder /cirrodrive/apps/backend/prisma prisma
COPY --from=builder /cirrodrive/apps/backend/dist dist

# 8000번 포트 노출
EXPOSE 8000

# 실행 명령어
ENTRYPOINT [ "npm", "run", "start" ]