// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  output        = "../dist"
  binaryTargets = ["native", "windows", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum PricingPlan {
  free
  basic
  premium
}

model User {
  id              Int         @id @default(autoincrement())
  username        String      @unique
  hashedPassword  String
  email           String      @unique
  pricingPlan     PricingPlan @default(free)
  usedStorage     Int         @default(0)
  profileImageUrl String?     @unique
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  sessions        Session[]
  folders         Folder[]
  files           FileMetadata[]
}

model Session {
  id        String   @id
  userId    Int
  expiresAt DateTime
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model FileMetadata {
  id Int @id @default(autoincrement())

  folderId  Int?
  name      String
  extension String
  size      Int
  savedPath String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  trashedAt DateTime?
  hash      String
  codes     Code[]    @relation("FileCodes")
  folder    Folder?   @relation(fields: [folderId], references: [id], onDelete: SetNull)
  ownerId   Int?
  owner     User?     @relation(fields: [ownerId], references: [id])

  @@index([folderId])
}

model Code {
  id         Int          @id @default(autoincrement())
  codeString String       @unique
  fileId     Int
  expiresAt  DateTime
  file       FileMetadata @relation("FileCodes", fields: [fileId], references: [id])
}

model Folder {
  id        Int            @id @default(autoincrement())
  parentId  Int?
  name      String
  createdAt DateTime       @default(now())
  updatedAt DateTime       @updatedAt
  parent    Folder?        @relation("FolderToFolder", fields: [parentId], references: [id])
  children  Folder[]       @relation("FolderToFolder")
  files     FileMetadata[]
  owner     User?          @relation(fields: [ownerId], references: [id], onDelete: SetNull)
  ownerId   Int?

  @@index([parentId])
}
